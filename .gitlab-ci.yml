stages:
  - build_frontend
  - build_backend
  - deploy
  - migrate
  - test

variables:
  GIT_SSL_NO_VERIFY: "true"
  GIT_STRATEGY: "none"
  REPO_URL: "https://glpat-Fjk-d7zg1vM--b8Sk_ys@10.0.6.30/proway/laravel-next.git"
  MYSQL_DATABASE: "laravel"
  MYSQL_ROOT_PASSWORD: "root"

# Estágio de clonagem e build do frontend
build_frontend:
  stage: build_frontend
  image: node:18
  script:
    - git clone ${REPO_URL} --depth=1 .
    - cd frontend/my-app
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/my-app/.next/
      - frontend/my-app/public/
      - frontend/my-app/package.json
      - backend/

# Estágio de build do backend
build_backend:
  stage: build_backend
  image: composer:latest
  dependencies:
    - build_frontend
  script:
    - cd backend
    - cp .env.example .env
    - sed -i "s/DB_HOST=.*/DB_HOST=db/" .env
    - sed -i "s/DB_DATABASE=.*/DB_DATABASE=laravel/" .env
    - sed -i "s/DB_USERNAME=.*/DB_USERNAME=root/" .env
    - sed -i "s/DB_PASSWORD=.*/DB_PASSWORD=root/" .env
    - composer install --no-dev --optimize-autoloader
    - php artisan key:generate
  artifacts:
    paths:
      - backend/vendor/
      - backend/app/
      - backend/bootstrap/
      - backend/config/
      - backend/database/
      - backend/public/
      - backend/resources/
      - backend/routes/
      - backend/storage/
      - backend/artisan
      - backend/.env
      - frontend/my-app/.next/
      - frontend/my-app/public/
      - frontend/my-app/package.json

# Estágio de deploy
deploy:
  stage: deploy
  image: php:8.2-cli
  dependencies:
    - build_backend
  services:
    - name: mysql:8.0
      alias: db
  variables:
    MYSQL_DATABASE: "${MYSQL_DATABASE}"
    MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
  script:
    - apt-get update && apt-get install -y libzip-dev unzip
    - docker-php-ext-install zip pdo pdo_mysql
    - cd backend
    - nohup php artisan serve --host=0.0.0.0 --port=8000 > backend.log 2>&1 &

# Estágio de migrate
migrate:
  stage: migrate
  image: php:8.2-cli
  dependencies:
    - build_backend
  services:
    - name: mysql:8.0
      alias: db
  variables:
    MYSQL_DATABASE: "${MYSQL_DATABASE}"
    MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
  script:
    - apt-get update && apt-get install -y libzip-dev unzip
    - docker-php-ext-install zip pdo pdo_mysql
    - cd backend
    - php artisan migrate --force
    - php artisan db:seed
    - php artisan import-csv

# Estágio de teste
test:
  stage: test
  image: php:8.2-cli
  dependencies:
    - build_backend
  services:
    - name: mysql:8.0
      alias: db
  variables:
    MYSQL_DATABASE: "${MYSQL_DATABASE}"
    MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
  script:
    - apt-get update && apt-get install -y libzip-dev unzip
    - docker-php-ext-install zip pdo pdo_mysql
    - cd backend
    - php artisan test